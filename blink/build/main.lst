ARM GAS  /tmp/ccGG2R3b.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Error_Handler:
  26              	.LFB132:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "gpio.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccGG2R3b.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  /tmp/ccGG2R3b.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
 101:Src/main.c    ****     HAL_Delay(100);
 102:Src/main.c    ****     /* USER CODE END WHILE */
 103:Src/main.c    **** 
 104:Src/main.c    ****     /* USER CODE BEGIN 3 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   }
 107:Src/main.c    ****   /* USER CODE END 3 */
 108:Src/main.c    **** }
 109:Src/main.c    **** 
 110:Src/main.c    **** /**
 111:Src/main.c    ****   * @brief System Clock Configuration
 112:Src/main.c    ****   * @retval None
 113:Src/main.c    ****   */
 114:Src/main.c    **** void SystemClock_Config(void)
 115:Src/main.c    **** {
 116:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Src/main.c    **** 
 119:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 120:Src/main.c    ****   */
 121:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 124:Src/main.c    ****   */
 125:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 126:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 133:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134:Src/main.c    ****   {
 135:Src/main.c    ****     Error_Handler();
 136:Src/main.c    ****   }
 137:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****   */
 139:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 144:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 145:Src/main.c    **** 
ARM GAS  /tmp/ccGG2R3b.s 			page 4


 146:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 147:Src/main.c    ****   {
 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    **** }
 151:Src/main.c    **** 
 152:Src/main.c    **** /* USER CODE BEGIN 4 */
 153:Src/main.c    **** 
 154:Src/main.c    **** /* USER CODE END 4 */
 155:Src/main.c    **** 
 156:Src/main.c    **** /**
 157:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 158:Src/main.c    ****   * @retval None
 159:Src/main.c    ****   */
 160:Src/main.c    **** void Error_Handler(void)
 161:Src/main.c    **** {
  28              		.loc 1 161 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE132:
  39              		.section	.text.SystemClock_Config,"ax",%progbits
  40              		.align	1
  41              		.global	SystemClock_Config
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	SystemClock_Config:
  48              	.LFB131:
 115:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  49              		.loc 1 115 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 80
  52              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  53              		.loc 1 115 0
  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58 0002 95B0     		sub	sp, sp, #84
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 88
 116:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  61              		.loc 1 116 0
  62 0004 3022     		movs	r2, #48
  63 0006 0021     		movs	r1, #0
  64 0008 08A8     		add	r0, sp, #32
  65 000a FFF7FEFF 		bl	memset
  66              	.LVL0:
 117:Src/main.c    **** 
ARM GAS  /tmp/ccGG2R3b.s 			page 5


  67              		.loc 1 117 0
  68 000e 0023     		movs	r3, #0
  69 0010 0393     		str	r3, [sp, #12]
  70 0012 0493     		str	r3, [sp, #16]
  71 0014 0593     		str	r3, [sp, #20]
  72 0016 0693     		str	r3, [sp, #24]
  73 0018 0793     		str	r3, [sp, #28]
  74              	.LBB2:
 121:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  75              		.loc 1 121 0
  76 001a 0193     		str	r3, [sp, #4]
  77 001c 204A     		ldr	r2, .L9
  78 001e 116C     		ldr	r1, [r2, #64]
  79 0020 41F08051 		orr	r1, r1, #268435456
  80 0024 1164     		str	r1, [r2, #64]
  81 0026 126C     		ldr	r2, [r2, #64]
  82 0028 02F08052 		and	r2, r2, #268435456
  83 002c 0192     		str	r2, [sp, #4]
  84 002e 019A     		ldr	r2, [sp, #4]
  85              	.LBE2:
  86              	.LBB3:
 122:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
  87              		.loc 1 122 0
  88 0030 0293     		str	r3, [sp, #8]
  89 0032 1C4B     		ldr	r3, .L9+4
  90 0034 1A68     		ldr	r2, [r3]
  91 0036 42F48042 		orr	r2, r2, #16384
  92 003a 1A60     		str	r2, [r3]
  93 003c 1B68     		ldr	r3, [r3]
  94 003e 03F48043 		and	r3, r3, #16384
  95 0042 0293     		str	r3, [sp, #8]
  96 0044 029B     		ldr	r3, [sp, #8]
  97              	.LBE3:
 125:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  98              		.loc 1 125 0
  99 0046 0123     		movs	r3, #1
 100 0048 0893     		str	r3, [sp, #32]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 101              		.loc 1 126 0
 102 004a 4FF48033 		mov	r3, #65536
 103 004e 0993     		str	r3, [sp, #36]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 104              		.loc 1 127 0
 105 0050 0222     		movs	r2, #2
 106 0052 0E92     		str	r2, [sp, #56]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 107              		.loc 1 128 0
 108 0054 4FF48003 		mov	r3, #4194304
 109 0058 0F93     		str	r3, [sp, #60]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 110              		.loc 1 129 0
 111 005a 0423     		movs	r3, #4
 112 005c 1093     		str	r3, [sp, #64]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 113              		.loc 1 130 0
 114 005e A821     		movs	r1, #168
 115 0060 1191     		str	r1, [sp, #68]
ARM GAS  /tmp/ccGG2R3b.s 			page 6


 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 116              		.loc 1 131 0
 117 0062 1292     		str	r2, [sp, #72]
 132:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 118              		.loc 1 132 0
 119 0064 1393     		str	r3, [sp, #76]
 133:Src/main.c    ****   {
 120              		.loc 1 133 0
 121 0066 08A8     		add	r0, sp, #32
 122 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 123              	.LVL1:
 124 006c 98B9     		cbnz	r0, .L7
 139:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125              		.loc 1 139 0
 126 006e 0F23     		movs	r3, #15
 127 0070 0393     		str	r3, [sp, #12]
 141:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 128              		.loc 1 141 0
 129 0072 0223     		movs	r3, #2
 130 0074 0493     		str	r3, [sp, #16]
 142:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 131              		.loc 1 142 0
 132 0076 0023     		movs	r3, #0
 133 0078 0593     		str	r3, [sp, #20]
 143:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 134              		.loc 1 143 0
 135 007a 4FF4A053 		mov	r3, #5120
 136 007e 0693     		str	r3, [sp, #24]
 144:Src/main.c    **** 
 137              		.loc 1 144 0
 138 0080 4FF48053 		mov	r3, #4096
 139 0084 0793     		str	r3, [sp, #28]
 146:Src/main.c    ****   {
 140              		.loc 1 146 0
 141 0086 0521     		movs	r1, #5
 142 0088 03A8     		add	r0, sp, #12
 143 008a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 144              	.LVL2:
 145 008e 20B9     		cbnz	r0, .L8
 150:Src/main.c    **** 
 146              		.loc 1 150 0
 147 0090 15B0     		add	sp, sp, #84
 148              	.LCFI2:
 149              		.cfi_remember_state
 150              		.cfi_def_cfa_offset 4
 151              		@ sp needed
 152 0092 5DF804FB 		ldr	pc, [sp], #4
 153              	.L7:
 154              	.LCFI3:
 155              		.cfi_restore_state
 135:Src/main.c    ****   }
 156              		.loc 1 135 0
 157 0096 FFF7FEFF 		bl	Error_Handler
 158              	.LVL3:
 159              	.L8:
 148:Src/main.c    ****   }
 160              		.loc 1 148 0
ARM GAS  /tmp/ccGG2R3b.s 			page 7


 161 009a FFF7FEFF 		bl	Error_Handler
 162              	.LVL4:
 163              	.L10:
 164 009e 00BF     		.align	2
 165              	.L9:
 166 00a0 00380240 		.word	1073887232
 167 00a4 00700040 		.word	1073770496
 168              		.cfi_endproc
 169              	.LFE131:
 171              		.section	.text.main,"ax",%progbits
 172              		.align	1
 173              		.global	main
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	main:
 180              	.LFB130:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 181              		.loc 1 69 0
 182              		.cfi_startproc
 183              		@ Volatile: function does not return.
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 08B5     		push	{r3, lr}
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 3, -8
 190              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 191              		.loc 1 77 0
 192 0002 FFF7FEFF 		bl	HAL_Init
 193              	.LVL5:
  84:Src/main.c    **** 
 194              		.loc 1 84 0
 195 0006 FFF7FEFF 		bl	SystemClock_Config
 196              	.LVL6:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 197              		.loc 1 91 0
 198 000a FFF7FEFF 		bl	MX_GPIO_Init
 199              	.LVL7:
 200              	.L12:
 100:Src/main.c    ****     HAL_Delay(100);
 201              		.loc 1 100 0 discriminator 1
 202 000e 4FF48041 		mov	r1, #16384
 203 0012 0348     		ldr	r0, .L14
 204 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 205              	.LVL8:
 101:Src/main.c    ****     /* USER CODE END WHILE */
 206              		.loc 1 101 0 discriminator 1
 207 0018 6420     		movs	r0, #100
 208 001a FFF7FEFF 		bl	HAL_Delay
 209              	.LVL9:
 210 001e F6E7     		b	.L12
 211              	.L15:
 212              		.align	2
 213              	.L14:
ARM GAS  /tmp/ccGG2R3b.s 			page 8


 214 0020 000C0240 		.word	1073875968
 215              		.cfi_endproc
 216              	.LFE130:
 218              		.text
 219              	.Letext0:
 220              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 221              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 222              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 223              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 224              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 225              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 226              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 227              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 228              		.file 10 "Inc/gpio.h"
 229              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 230              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 231              		.file 13 "<built-in>"
ARM GAS  /tmp/ccGG2R3b.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccGG2R3b.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccGG2R3b.s:25     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccGG2R3b.s:40     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccGG2R3b.s:47     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccGG2R3b.s:166    .text.SystemClock_Config:00000000000000a0 $d
     /tmp/ccGG2R3b.s:172    .text.main:0000000000000000 $t
     /tmp/ccGG2R3b.s:179    .text.main:0000000000000000 main
     /tmp/ccGG2R3b.s:214    .text.main:0000000000000020 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
HAL_GPIO_TogglePin
HAL_Delay
