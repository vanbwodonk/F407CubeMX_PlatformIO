ARM GAS  /tmp/cc4C2qKU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/cc4C2qKU.s 			page 2


  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "gpio.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE BEGIN Includes */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   *
  70:Src/main.c    ****   * @retval None
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
  88:Src/main.c    ****   SystemClock_Config();
ARM GAS  /tmp/cc4C2qKU.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Infinite loop */
 101:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 102:Src/main.c    ****   while (1)
 103:Src/main.c    ****   {
 104:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
 105:Src/main.c    ****     HAL_Delay(100);
 106:Src/main.c    ****   /* USER CODE END WHILE */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE BEGIN 3 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   }
 111:Src/main.c    ****   /* USER CODE END 3 */
 112:Src/main.c    **** 
 113:Src/main.c    **** }
 114:Src/main.c    **** 
 115:Src/main.c    **** /**
 116:Src/main.c    ****   * @brief System Clock Configuration
 117:Src/main.c    ****   * @retval None
 118:Src/main.c    ****   */
 119:Src/main.c    **** void SystemClock_Config(void)
 120:Src/main.c    **** {
 121:Src/main.c    **** 
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 124:Src/main.c    **** 
 125:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 126:Src/main.c    ****     */
 127:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 128:Src/main.c    **** 
 129:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 130:Src/main.c    **** 
 131:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 132:Src/main.c    ****     */
 133:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 134:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 141:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 142:Src/main.c    ****   {
 143:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 144:Src/main.c    ****   }
 145:Src/main.c    **** 
ARM GAS  /tmp/cc4C2qKU.s 			page 4


 146:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 147:Src/main.c    ****     */
 148:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 149:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 150:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 151:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 152:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 153:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 154:Src/main.c    **** 
 155:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 156:Src/main.c    ****   {
 157:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 158:Src/main.c    ****   }
 159:Src/main.c    **** 
 160:Src/main.c    ****     /**Configure the Systick interrupt time 
 161:Src/main.c    ****     */
 162:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 163:Src/main.c    **** 
 164:Src/main.c    ****     /**Configure the Systick 
 165:Src/main.c    ****     */
 166:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 169:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 170:Src/main.c    **** }
 171:Src/main.c    **** 
 172:Src/main.c    **** /* USER CODE BEGIN 4 */
 173:Src/main.c    **** 
 174:Src/main.c    **** /* USER CODE END 4 */
 175:Src/main.c    **** 
 176:Src/main.c    **** /**
 177:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 178:Src/main.c    ****   * @param  file: The file name as string.
 179:Src/main.c    ****   * @param  line: The line in file as a number.
 180:Src/main.c    ****   * @retval None
 181:Src/main.c    ****   */
 182:Src/main.c    **** void _Error_Handler(char *file, int line)
 183:Src/main.c    **** {
  28              		.loc 1 183 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE128:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
ARM GAS  /tmp/cc4C2qKU.s 			page 5


  49              	.LFB127:
 120:Src/main.c    **** 
  50              		.loc 1 120 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Src/main.c    **** 
  54              		.loc 1 120 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 127:Src/main.c    **** 
  63              		.loc 1 127 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2A4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 129:Src/main.c    **** 
  76              		.loc 1 129 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 264B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 133:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 133 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 134 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 135 0
  94 003c 0222     		movs	r2, #2
  95 003e 0E92     		str	r2, [sp, #56]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
  96              		.loc 1 136 0
  97 0040 4FF48003 		mov	r3, #4194304
ARM GAS  /tmp/cc4C2qKU.s 			page 6


  98 0044 0F93     		str	r3, [sp, #60]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
  99              		.loc 1 137 0
 100 0046 0423     		movs	r3, #4
 101 0048 1093     		str	r3, [sp, #64]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 138 0
 103 004a A821     		movs	r1, #168
 104 004c 1191     		str	r1, [sp, #68]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 139 0
 106 004e 1292     		str	r2, [sp, #72]
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 140 0
 108 0050 1393     		str	r3, [sp, #76]
 141:Src/main.c    ****   {
 109              		.loc 1 141 0
 110 0052 08A8     		add	r0, sp, #32
 111 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 112              	.LVL1:
 113 0058 20BB     		cbnz	r0, .L7
 148:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 114              		.loc 1 148 0
 115 005a 0F23     		movs	r3, #15
 116 005c 0393     		str	r3, [sp, #12]
 150:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 117              		.loc 1 150 0
 118 005e 0223     		movs	r3, #2
 119 0060 0493     		str	r3, [sp, #16]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 120              		.loc 1 151 0
 121 0062 0023     		movs	r3, #0
 122 0064 0593     		str	r3, [sp, #20]
 152:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 123              		.loc 1 152 0
 124 0066 4FF4A053 		mov	r3, #5120
 125 006a 0693     		str	r3, [sp, #24]
 153:Src/main.c    **** 
 126              		.loc 1 153 0
 127 006c 4FF48053 		mov	r3, #4096
 128 0070 0793     		str	r3, [sp, #28]
 155:Src/main.c    ****   {
 129              		.loc 1 155 0
 130 0072 0521     		movs	r1, #5
 131 0074 03A8     		add	r0, sp, #12
 132 0076 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 133              	.LVL2:
 134 007a B8B9     		cbnz	r0, .L8
 162:Src/main.c    **** 
 135              		.loc 1 162 0
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL3:
 138 0080 0E4B     		ldr	r3, .L9+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 8009     		lsrs	r0, r0, #6
 141 0088 FFF7FEFF 		bl	HAL_SYSTICK_Config
 142              	.LVL4:
ARM GAS  /tmp/cc4C2qKU.s 			page 7


 166:Src/main.c    **** 
 143              		.loc 1 166 0
 144 008c 0420     		movs	r0, #4
 145 008e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 146              	.LVL5:
 169:Src/main.c    **** }
 147              		.loc 1 169 0
 148 0092 0022     		movs	r2, #0
 149 0094 1146     		mov	r1, r2
 150 0096 4FF0FF30 		mov	r0, #-1
 151 009a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 152              	.LVL6:
 170:Src/main.c    **** 
 153              		.loc 1 170 0
 154 009e 15B0     		add	sp, sp, #84
 155              	.LCFI2:
 156              		.cfi_remember_state
 157              		.cfi_def_cfa_offset 4
 158              		@ sp needed
 159 00a0 5DF804FB 		ldr	pc, [sp], #4
 160              	.L7:
 161              	.LCFI3:
 162              		.cfi_restore_state
 143:Src/main.c    ****   }
 163              		.loc 1 143 0
 164 00a4 8F21     		movs	r1, #143
 165 00a6 0648     		ldr	r0, .L9+12
 166 00a8 FFF7FEFF 		bl	_Error_Handler
 167              	.LVL7:
 168              	.L8:
 157:Src/main.c    ****   }
 169              		.loc 1 157 0
 170 00ac 9D21     		movs	r1, #157
 171 00ae 0448     		ldr	r0, .L9+12
 172 00b0 FFF7FEFF 		bl	_Error_Handler
 173              	.LVL8:
 174              	.L10:
 175              		.align	2
 176              	.L9:
 177 00b4 00380240 		.word	1073887232
 178 00b8 00700040 		.word	1073770496
 179 00bc D34D6210 		.word	274877907
 180 00c0 00000000 		.word	.LC0
 181              		.cfi_endproc
 182              	.LFE127:
 184              		.section	.text.main,"ax",%progbits
 185              		.align	1
 186              		.global	main
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	main:
 193              	.LFB126:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 194              		.loc 1 73 0
 195              		.cfi_startproc
ARM GAS  /tmp/cc4C2qKU.s 			page 8


 196              		@ Volatile: function does not return.
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
  81:Src/main.c    **** 
 204              		.loc 1 81 0
 205 0002 FFF7FEFF 		bl	HAL_Init
 206              	.LVL9:
  88:Src/main.c    **** 
 207              		.loc 1 88 0
 208 0006 FFF7FEFF 		bl	SystemClock_Config
 209              	.LVL10:
  95:Src/main.c    ****   /* USER CODE BEGIN 2 */
 210              		.loc 1 95 0
 211 000a FFF7FEFF 		bl	MX_GPIO_Init
 212              	.LVL11:
 213              	.L12:
 104:Src/main.c    ****     HAL_Delay(100);
 214              		.loc 1 104 0 discriminator 1
 215 000e 4FF48041 		mov	r1, #16384
 216 0012 0348     		ldr	r0, .L14
 217 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 218              	.LVL12:
 105:Src/main.c    ****   /* USER CODE END WHILE */
 219              		.loc 1 105 0 discriminator 1
 220 0018 6420     		movs	r0, #100
 221 001a FFF7FEFF 		bl	HAL_Delay
 222              	.LVL13:
 223 001e F6E7     		b	.L12
 224              	.L15:
 225              		.align	2
 226              	.L14:
 227 0020 000C0240 		.word	1073875968
 228              		.cfi_endproc
 229              	.LFE126:
 231              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 232              		.align	2
 233              	.LC0:
 234 0000 5372632F 		.ascii	"Src/main.c\000"
 234      6D61696E 
 234      2E6300
 235              		.text
 236              	.Letext0:
 237              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 238              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 239              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 240              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 241              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 242              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 243              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 244              		.file 9 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 245              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 246              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/cc4C2qKU.s 			page 9


 247              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 248              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 249              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 250              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 251              		.file 16 "Inc/gpio.h"
 252              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  /tmp/cc4C2qKU.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4C2qKU.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/cc4C2qKU.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cc4C2qKU.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc4C2qKU.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc4C2qKU.s:177    .text.SystemClock_Config:00000000000000b4 $d
     /tmp/cc4C2qKU.s:185    .text.main:0000000000000000 $t
     /tmp/cc4C2qKU.s:192    .text.main:0000000000000000 main
     /tmp/cc4C2qKU.s:227    .text.main:0000000000000020 $d
     /tmp/cc4C2qKU.s:232    .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
HAL_GPIO_TogglePin
HAL_Delay
